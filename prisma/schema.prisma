// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       String @id @default(cuid())
  username String @unique
  password String
}

model Players {
  player_id       Int      @id @default(autoincrement())
  name            String   @db.VarChar(200)
  shortName       String?  @db.VarChar(100)
  blitz           Int
  rapid           Int
  classic         Int
  title           String?  @db.VarChar(150)
  shortTitle      String?  @db.VarChar(10)
  city            String?  @db.VarChar(200)
  birthYear       Int?
  profilePhoto    String?  @db.VarChar(400)
  backgroundPhoto String?  @db.VarChar(400)
  lichessID       String?  @db.VarChar(200)
  chesscomID      String?  @db.VarChar(200)
  active          Boolean
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  playerTournaments PlayerTournaments[]
  role Role[]
}

model PlayerTournaments {
  playerTournaments_id Int      @id @default(autoincrement())
  tournament           String   @db.VarChar(200)
  ratingType           String   @db.VarChar(20)
  oldRating            Int
  variation            Int
  variationType        Boolean
  createdAt            DateTime @default(now())

  playerID Int

  players Players @relation(fields: [playerID], references: [player_id])

  @@index([playerID])
}

model Role {
  role_id Int      @id @default(autoincrement())
  roleType String  @db.VarChar(40)
  createdAt            DateTime @default(now())

  playerID Int

  players Players @relation(fields: [playerID], references: [player_id])

  @@index([playerID])
}

model Announcements {
  announcements_id Int      @id @default(autoincrement())
  number           String   @db.VarChar(20)
  content          String   @db.Text
  createdAt        DateTime @default(now())
}

model News {
  news_id   Int      @id @default(autoincrement())
  title     String   @db.VarChar(200)
  author    String   @db.VarChar(100)
  logo      String   @db.VarChar(400)
  pronoun   String   @db.VarChar(20)
  type      String   @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  newsImg NewsImg[]

  paragraphs Paragraphs[]
}

model Paragraphs {
  paragraphs_id Int    @id @default(autoincrement())
  content       String @db.LongText

  newsID Int

  news News @relation(fields: [newsID], references: [news_id])

  @@index([newsID])
}

model NewsImg {
  newsImg_id Int    @id @default(autoincrement())
  url        String @db.VarChar(400)

  newsID Int

  news News @relation(fields: [newsID], references: [news_id])
  
  @@index([newsID])
}